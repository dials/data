trigger:
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'

stages:
- stage: static
  displayName: Static Analysis
  jobs:
  - job: checks
    displayName: static code analysis
    pool:
      vmImage: ubuntu-20.04
    steps:
      # Use Python >=3.7 for syntax validation
      - task: UsePythonVersion@0
        displayName: Set up python
        inputs:
          versionSpec: 3.7

      - bash: |
          python .azure-pipelines/syntax-validation.py
        displayName: Syntax validation

      - bash: |
          pip install flake8
          python .azure-pipelines/flake8-validation.py
        displayName: Flake8 validation


- stage: build
  displayName: Build
  dependsOn:
  condition: false
  jobs:
  - job: build
    displayName: build package
    pool:
      vmImage: ubuntu-20.04
    steps:
      - task: UsePythonVersion@0
        displayName: Set up python
        inputs:
          versionSpec: 3.9

      - bash: |
          pip install -r requirements_dev.txt
        displayName: Install dependencies

      - bash: .azure-pipelines/update-package-version
        displayName: Set package version
        condition: eq(variables['Build.Repository.Name'], 'Anthchirp/data')

      - bash: |
          set -ex
          python setup.py sdist bdist_wheel
          mkdir -p dist/pypi
          shopt -s extglob
          mv -v dist/!(pypi) dist/pypi
          git archive HEAD | gzip > dist/repo-source.tar.gz
          ls -laR dist
        displayName: Build python package

      - task: PublishBuildArtifacts@1
        displayName: Store artifact
        inputs:
          pathToPublish: dist/
          artifactName: package

      - bash: python setup.py checkdocs
        displayName: Check package description

- stage: tests
  displayName: Run unit tests
  dependsOn:
  - static
  - build
  condition: false
  jobs:
  - job: linux
    pool:
      vmImage: ubuntu-20.04
    strategy:
      matrix:
        python36:
          PYTHON_VERSION: 3.6
#       python37:
#         PYTHON_VERSION: 3.7
#       python38:
#         PYTHON_VERSION: 3.8
#       python39:
#         PYTHON_VERSION: 3.9
    steps:
    - template: ci.yml

- stage: hashinfo
  displayName: Update hash information
  dependsOn:
  - static
#  - build
#  - tests
#  condition: eq(variables['Build.Repository.Name'], 'Anthchirp/data')
             # and(..., ...)
             # build on master/main, not a pull request
  jobs:
  - job: hashinfo
    displayName: Check for missing hashes
    pool:
      vmImage: ubuntu-20.04
    steps:
      - task: UsePythonVersion@0
        displayName: Set up python
        inputs:
          versionSpec: 3.9

      - script: |
          pip install -r requirements.txt
          pip install -e .
        displayName: Install package

      - bash: .azure-pipelines/create-hashinfo-pull-requests
        displayName: Create pull requests
        timeoutInMinutes: 5
        env:
          GITHUB_TOKEN: $(GITHUB_TOKEN)

      - bash: rm .git/credentials
        displayName: Remove git credentials
        condition: always()

